<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--mapper中有很多sql语句，namespace是用来隔离sql语句
	代理开发：namespace有特殊的含义 :必须是接口的全类路径名 -->
<mapper namespace="cn.itcast.dao.UserMapper">
    <!-- resultMap：高级映射，查询结果集映射到javabean
         type:把查询结果集映射到那个对象，Orders对象
         id：resultMap唯一标识 -->
    <resultMap type="user" id="BaseResultMap">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="birthday" property="birthday"/>
        <result column="sex" property="sex"/>
        <result column="address" property="address"/>
        <!-- 配置一对多的关系：一个用户有多个订单 -->
        <collection property="ordersList" ofType="orders">
            <!-- 主键映射 -->
            <id column="id" property="id"/>
            <result column="user_id" property="userId"/>
            <result column="number" property="number"/>
            <result column="createtime" property="createTime"/>
            <result column="note" property="note"/>
            <!-- 一个订单有多个订单明细，使用collection集合映射进行配置一对多的关系 -->
            <collection property="orderDetailList" ofType="orderDetail">
                <id column="id" property="id"/>
                <result column="orders_id" property="ordersId"/>
                <result column="items_id" property="itemsId"/>
                <result column="items_num" property="itemsNum"/>
                <!-- 一个订单明细有一个商品，使用association进行一对一的关系映射配置 -->
                <association property="items" javaType="items">
                    <id column="id" property="id"/>
                    <result column="name" property="name"/>
                    <result column="price" property="price"/>
                    <result column="detail" property="detail"/>
                    <result column="pic" property="pic"/>
                    <result column="createtime" property="createTime"/>
                </association>
            </collection>
        </collection>
    </resultMap>

    <!-- 根据订单查询用户:一对一使用resultMap -->
    <select id="findOrdersAndUserByMap" resultMap="BaseResultMap">
			SELECT 
            orders.*,
            user.username,
            user.address,
            user.sex 
          FROM
            orders,
            USER 
          WHERE orders.user_id = user.id 
</select>

    <resultMap type="orders" id="BaseResultMapRM" extends="BaseResultMap">
        <!-- mybatis使用collection表示一对多的关系
             property:表示把结果集映射到Orders的那个属性
             ofType:表示映射集合中对象类型-->
        <collection property="orderDetailList" ofType="orderDetail">
            <id column="id" property="id"/>
            <result column="orders_id" property="ordersId"/>
            <result column="items_id" property="itemsId"/>
            <result column="items_num" property="itemsNum"/>
        </collection>

    </resultMap>

    <select id="findOrdersAndDetail" resultMap="BaseResultMapRM">
			SELECT 
            orders.*,
            user.username,
            user.address,
            user.sex,
            orderdetail.id orderdetail_id,
            orderdetail.items_id,
            orderdetail.orders_id,
            orderdetail.items_num
          FROM
            orders,
            USER,
            orderdetail 
          WHERE orders.user_id = user.id AND orders.id=orderdetail.orders_id

</select>

    <select id="findUserAndItems" resultMap="BaseResultMap">
			SELECT 
		  user.*,
		  orders.number,
		  orders.user_id,
		  orders.note,
		  orderdetail.id orderdetail_id,
		  orderdetail.items_id,
		  orderdetail.orders_id,
		  orderdetail.items_num,
		  items.id,
		  items.name,
		  items.price,
		  items.detail,
		  items.pic,
		  items.createtime 
		FROM
		  orders,
		  USER,
		  orderdetail,
		  items 
		WHERE user.id = orders.user_id 
		  AND orders.id = orderdetail.orders_id 
		  AND orderdetail.items_id = items.id
</select>

    <insert id="insertUser" parameterType="user" useGeneratedKeys="true" keyProperty="id">
insert into user(id,username,birthday,sex,address) values(#{id},#{username},#{birthday},#{sex},#{address})
</insert>

</mapper>
