<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--mapper中有很多sql语句，namespace是用来隔离sql语句
	代理开发：namespace有特殊的含义 :必须是接口的全类路径名 -->
<mapper namespace="cn.itcast.dao.OrdersMapper">
    <!-- resultMap：高级映射，查询结果集映射到javabean
         type:把查询结果集映射到那个对象，Orders对象
         id：resultMap唯一标识 -->
    <resultMap type="orders" id="BaseResultMap">
        <!-- 主键映射 -->
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="number" property="number"/>
        <result column="createtime" property="createTime"/>
        <result column="note" property="note"/>
        <!-- 配置一对一的映射关系：mybatis使用association
             property：表示把结果集映射到Orders中那个属性
             javaType:表示映射结果集的类型  -->
        <association property="user" javaType="user">
            <result column="username" property="username"/>
            <result column="sex" property="sex"/>
            <result column="address" property="address"/>
        </association>


    </resultMap>

    <!-- 根据订单查询用户:一对一使用resultMap -->
    <select id="findOrdersAndUserByMap" resultMap="BaseResultMap">
			SELECT 
            orders.*,
            user.username,
            user.address,
            user.sex 
          FROM
            orders,
            USER 
          WHERE orders.user_id = user.id 
</select>

    <resultMap type="orders" id="BaseResultMapRM" extends="BaseResultMap">
        <!-- mybatis使用collection表示一对多的关系
             property:表示把结果集映射到Orders的那个属性
             ofType:表示映射集合中对象类型-->
        <collection property="orderDetailList" ofType="orderDetail">
            <id column="id" property="id"/>
            <result column="orders_id" property="ordersId"/>
            <result column="items_id" property="itemsId"/>
            <result column="items_num" property="itemsNum"/>
        </collection>

    </resultMap>

    <select id="findOrdersAndDetail" resultMap="BaseResultMapRM">
			SELECT 
            orders.*,
            user.username,
            user.address,
            user.sex,
            orderdetail.id orderdetail_id,
            orderdetail.items_id,
            orderdetail.orders_id,
            orderdetail.items_num
          FROM
            orders,
            USER,
            orderdetail 
          WHERE orders.user_id = user.id AND orders.id=orderdetail.orders_id

</select>

    <insert id="insertOrders" parameterType="orders">
insert into orders(id,user_id,number,createtime,note) values(#{id},#{userId},#{number},#{createTime},#{note})
</insert>

</mapper>
